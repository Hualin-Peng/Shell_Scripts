const elemType *ptr //指针指向的值不能变
elemType *const ptr //指针的指向不能变


Shell 中的$0/${0} $1/${1} $* $@ $# $$ $? $() $(())
$0:文件本身名称
$1:命令行第一个参数,$2为第二个,$n 为第n个
$*:所有参数列表
$@:所有参数列表
$#:所有参数列表
$$:脚本运行时的PID
$?:脚本退出码

*与@的区别

当命令行为test.sh 1 2 3
"$*" 表示“1 2 3”
“$@” 表示"1" "2" "3"
二者没有被引号括起来的时是一样的都为 “1 2 3”，只有被引号括起来后才表现出差异

$() 等同于``(反引号):运行一段命令
$(())进行数字运算

repeat函数
repeat() {while true; do $@ && return; done}
改进：
repeat() {while :;do $@ && return; done} //shell内建命令：，该命令的退出状态总是为0
加入延时：
repeat() {while :;do $@ && return;sleep 10; done} //命令每10s执行一次


//截取key_str1和key_str2之间的字符(不包括key_str1和key_str2)
cat log | sed 's/.*key_str1\(.*\)key_str2.*/\1/g'
\(和\)表示把括号中的内容剔除出来，会依次放到\1 \2 \3这些变量中
s/A/B就是B替换A
计算和与平均值：
cat Pytorch_log.txt | grep -E '408/408|51/51|13/13' | sed 's/.* \(.*\)it.*/\1/g' | awk '{sum+=$1} END {print"Sum=" sum;print"Aver=" sum/NR}'

只查看文件的第20行到30行的内容：
awk '{if(NR>=20 && NR <=30) print $0}' test.txt   //$0查看整行
